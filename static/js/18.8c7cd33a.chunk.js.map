{"version":3,"sources":["config/index.ts","hooks/useBlock.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","CAKE_POOL_PID","useBlock","useContext","BlockContext","Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","theme","colors","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","primary","isOpen","IfoCardDescription","defaultIsOpen","description","useState","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","raisingAmount","totalAmount","href","target","rel","ml","style","display","times","toFixed","margin","Details","Countdown","IfoCardTime","isLoading","status","secondsUntilStart","secondsUntilEnd","block","countdownToUse","timeUntil","getTimePeriods","suffix","bold","days","hours","minutes","ButtonWrapper","radii","default","LabelButton","value","label","buttonLabel","disabled","fontSize","color","StyledSpacer","props","spacing","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onChange","onSelectMax","Input","endAdornment","placeholder","toLocaleString","ContributeModal","currency","contract","currencyAddress","onDismiss","setValue","pendingTx","setPendingTx","account","useWallet","balance","getFullDisplayBalance","useTokenBalance","title","e","currentTarget","toString","justifyContent","fullWidth","mr","a","methods","deposit","pow","send","from","IfoCardContribute","address","tokenDecimals","offeringTokenBalance","setOfferingTokenBalance","amount","claimed","userInfo","setUserInfo","contractRaisingToken","useERC20","allowance","useIfoAllowance","onApprove","useIfoApprove","useModal","onPresentContributeModal","useEffect","getOfferingAmount","call","userinfo","fetch","claim","harvest","isFinished","percentOfUserContribution","console","error","getBalanceNumber","StyledIfoCard","Card","getStatus","currentBlock","startBlock","endBlock","IfoCard","ifo","id","releaseBlockNumber","blocksRemaining","startBlockNum","endBlockNum","state","setState","useIfoContract","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","totalBlocks","fetchProgress","isActive","ribbon","UnlockButton","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/18.8c7cd33a.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(0.15)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 0\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IFO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IFOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IFO: Initial Farm Offerings')}</Title>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <StyledProgress>\n      <Progress primaryStep={progress} />\n    </StyledProgress>\n  )\n}\n\nexport default IfoCardProgress\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  cakeToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(586, 'TREE to burn (USD)')}</Display>\n          <Text>{cakeToBurn}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pancakeswap-libs/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Button, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { useERC20 } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport { useIfoApprove } from 'hooks/useApprove'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  tokenDecimals: number\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  address,\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  tokenDecimals,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\n\n  const { account } = useWallet()\n  const contractRaisingToken = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\n  const onApprove = useIfoApprove(contractRaisingToken, address)\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\n      const userinfo = await contract.methods.userInfo(account).call()\n\n      setUserInfo(userinfo)\n      setOfferingTokenBalance(balance)\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  if (allowance === null) {\n    return null\n  }\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.harvest().send({ from: account })\n    setPendingTx(false)\n  }\n  const isFinished = status === 'finished'\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\n\n  if (allowance <= 0) {\n    return (\n      <Button\n        fullWidth\n        disabled={pendingTx || isFinished}\n        onClick={async () => {\n          try {\n            setPendingTx(true)\n            await onApprove()\n            setPendingTx(false)\n          } catch (e) {\n            setPendingTx(false)\n            console.error(e)\n          }\n        }}\n      >\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userInfo.claimed}\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\n        value={\n          // eslint-disable-next-line no-nested-ternary\n          isFinished\n            ? userInfo.claimed\n              ? 'Claimed'\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\n        }\n        onClick={isFinished ? claim : onPresentContributeModal}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {isFinished\n          ? `You'll be refunded any excess tokens when you claim`\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardTime from './IfoCardTime'\nimport IfoCardContribute from './IfoCardContribute'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    address,\n    name,\n    subTitle,\n    description,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    cakeToBurn,\n    projectSiteUrl,\n    currency,\n    currencyAddress,\n    tokenDecimals,\n    releaseBlockNumber,\n  } = ifo\n  const [state, setState] = useState({\n    isLoading: true,\n    status: null,\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 0,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { account } = useWallet()\n  const contract = useIfoContract(address)\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\n        contract.methods.startBlock().call(),\n        contract.methods.endBlock().call(),\n        contract.methods.raisingAmount().call(),\n        contract.methods.totalAmount().call(),\n      ])\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        isLoading: false,\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, contract, releaseBlockNumber, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\n        />\n        {!account && <UnlockButton fullWidth />}\n        {(isActive || isFinished) && (\n          <IfoCardContribute\n            address={address}\n            currency={currency}\n            currencyAddress={currencyAddress}\n            contract={contract}\n            status={state.status}\n            raisingAmount={state.raisingAmount}\n            tokenDecimals={tokenDecimals}\n          />\n        )}\n        <IfoCardDescription description={description} />\n        <IfoCardDetails\n          launchDate={launchDate}\n          launchTime={launchTime}\n          saleAmount={saleAmount}\n          raiseAmount={raiseAmount}\n          cakeToBurn={cakeToBurn}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.raisingAmount}\n          totalAmount={state.totalAmount}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy TREE and BNB tokens')}</li>\n            <li>{TranslateString(598, 'Get TREE-BNB LP tokens by adding TREE and BNB liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\n              {TranslateString(999, 'Buy cake')}\n            </LinkExternal>\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\n              {TranslateString(999, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, commit your TREE-LP tokens to buy the IFO tokens')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with PancakeSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}