{"version":3,"sources":["hooks/useTickets.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/lotteryUtils.js","components/Input/index.ts","hooks/useGetLotteryHasDrawn.ts","hooks/useBuyLottery.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["useTotalRewards","useState","BigNumber","rewards","setRewards","lotteryContract","useLottery","fastRefresh","useRefresh","useEffect","a","getTotalRewards","res","fetchBalance","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","account","useWallet","ticketsContract","useLotteryTicket","useCallback","getTotalClaim","claim","useWinningNumbers","winngNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","console","error","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","finanltokenIds","r","drawed","calls4","reduce","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","amount","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","txHash","useMultiBuyLottery","onMultiBuy","log","useMaxNumber","max","setMax","fetchMax","Wrapper","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","symbol","availableSymbol","onChange","onSelectMax","value","TranslateString","useI18n","Input","endAdornment","placeholder","toLocaleString","BuyTicketModal","onDismiss","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","handleBuy","Math","floor","random","handleSelectMax","Number","title","e","currentTarget","Tips","Announce","Final","fullWidth","variant","disabled","createContext","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","style","textSubtle","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","winNumbers","rewardMatch","number","n","listItems","emoji","join","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","marginRight","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","allowance","useLotteryAllowance","onApprove","useLotteryApprove","cakeBalance","useTokenBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","getDataArray","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Footer","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/15.84ff31a6.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIdex) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIdex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIdex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\n    return amount / 1e18 / 10\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","export { default } from './Input'\nexport type { InputProps } from './Input'\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        console.log(\"****contract = \", lotteryContract, \"amount = \", amount, \"number = \", numbers, \"account = \", account)\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy('10', numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 50) {\n      setVal('50')\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * 10\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"SEED\"\n      />\n      <div>\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 SEED')}</Tips>\n        <Tips>{TranslateString(458, '1 Ticket = 10 SEED')}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your SEED cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} SEED`)}</Final>\n      </div>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          fullWidth\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background: linear-gradient(rgb(142 199 97) 0%, rgb(59 183 143) 76.22%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title style={{color: 'white'}}>{TranslateString(999, 'The SEED Lottery')}</Title>\n          <Blurb>{TranslateString(999, 'Buy tickets with SEED')}</Blurb>\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(999, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              SEED\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(999, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your SEED will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button fullWidth onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useLotteryApprove } from 'hooks/useApprove'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const { onApprove } = useLotteryApprove()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"SEED\" />)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(999, 'Approve SEED')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        {/* <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading> */}\n        <RightAlignedHeading size=\"md\">{0}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        {/* <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText> */}\n        <RightAlignedText>{0}</RightAlignedText>        \n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        {/* <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText> */}\n        <RightAlignedText>{0}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            {/* <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText> */}\n            <RightAlignedText>{0}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          {/* <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText> */}\n          <RightAlignedText>{0}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">0 SEED</Heading>\n              {/* <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} SEED</Heading> */}\n              </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={200} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={200} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={200} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={200} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={200} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={200} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={200} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={200} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  max-width: 200px;\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(999, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend SEED to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.SEEDdefi.com/lottery\">Read more</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\n          {TranslateString(999, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} SEED`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap-libs/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    // return historyData\n    //   .map((dataPoint) => {\n    //     return dataPoint[kind]\n    //   })\n    //   .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Footer = styled.div`\n  background-image: url(/images/footerbg.svg);\n  background-position: bottom;\n  background-repeat-x: repeat;\n  background-repeat-y: no-repeat;\n  padding-bottom: 17%;\n  background-size: 50%;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n      <Footer />\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}